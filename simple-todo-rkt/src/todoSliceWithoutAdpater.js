import {createSlice} from '@reduxjs/toolkit';

// Initial state is an empty array, which will hold the to-do items
const initialState = [];

const todoSlice = createSlice({
	// The name of the slice that will appear in the Redux DevTools Actions
	name: 'todos',

	// The initial state of the slice
	initialState,

	// Reducers define how the state is updated based on dispatched actions
	reducers: {
		// Adds a new to-do to the list with a unique id, text, and a completed status (defaulted to false)
		addTodo: (state, action) => {
			state.push({
				id: Date.now(), // Use the current timestamp as a unique id
				text: action.payload, // The text for the new to-do item
				completed: false, // New to-dos are not completed by default
			});
		},

		// Toggles the completed status of a to-do item when it's clicked
		toggleTodo: (state, action) => {
			const todo = state.find(todo => todo.id === action.payload); // Find the to-do by its id
			if (todo) {
				todo.completed = !todo.completed; // Toggle the completed status
			}
		},

		// Removes a to-do item from the list by its id
		removeTodo: (state, action) => {
			return state.filter(todo => todo.id !== action.payload); // Filter out the to-do to be removed
		},
	},
});

// Export the actions generated by createSlice
export const {addTodo, toggleTodo, removeTodo} = todoSlice.actions;

// Selector to get all to-dos from the store state
export const selectTodos = state => state.todos;

// Export the reducer function, which will be used in the store setup
export default todoSlice.reducer;
